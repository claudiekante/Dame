{% extends 'base.html.twig' %}

{% block body %}
    <h3>Détail de l'étape</h3>
    Nom de l'étape : {{ stop.stopName }}
    Latitude de l'étape : {{ stop.stopLatitude }}
    Longitude de l'étape : {{ stop.stopLongitude }}
    PlusCode de l'étape : {{ stop.stopPluscode }}
    <p></p>
    Cette étape a été crée le : {{ stop.dateCreatedStop.format("d, m, Y") }}
    Cette étape a été modifiée le : {{ stop.dateModifiedStop.format("d, m, Y") }}

    <p></p>

{#    following, the code Leaflet to display openstreetmap#}

    <div id="map"></div>
    <script>

        const map = L.map('map').setView([{{ stop.stopLatitude }}, {{ stop.stopLongitude }}], 12);

        const tiles = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(map);

        const marker = L.marker([{{ stop.stopLatitude }}, {{ stop.stopLongitude }}]).addTo(map);

        {#const circle = L.circle([{{ leg.startLegLatitude }}, {{ leg.startLegLongitude }}], {#}
        {#    color: 'red',#}
        {#    fillColor: '#f03',#}
        {#    fillOpacity: 0.5,#}
        {#    radius: 33#}
        {#}).addTo(map);#}

        {#var polygon = L.polygon([#}
        {#    [{{ leg.startLegLatitude }}, {{ leg.startLegLongitude }}],#}
        {#    [{{ leg.endLegLatitude }}, {{ leg.endLegLongitude }}],#}
        {#    [{{ leg.startLegLatitude }}, {{ leg.startLegLongitude }}]#}
        {#]).addTo(map);#}


        // map.fitBounds(polygon.getBounds());


    </script>

{% endblock %}

{% block title %}
    {{ parent() }} | Détail de l'arrêt
{% endblock %}

